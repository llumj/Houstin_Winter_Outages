---
title: "Homework Assignment #3"
subtitle: "Exploring patterns of environmental justice"
author: "Joshua Mull"
date: last-modified
execute:
  warning: false
  message: false
format:
  html:
    toc: true
    code-fold: true
editor_options: 
  chunk_output_type: console
---


#### Load libraries 
```{r}
library(tidyverse)
library(sf)
library(stars)
library(terra)
library(tmap)
library(dplyr)
```

#### Read in data 
```{r, fig.width=10, fig.height=8}
# Use st_read to read in building data, save as variable building
building <- st_read(
  here::here("data", "gis_osm_buildings_a_free_1.gpkg"),
  query = "SELECT * FROM gis_osm_buildings_a_free_1
           WHERE (type IS NULL AND name IS NULL) 
           OR type IN ('residential', 'apartments', 'house', 'static_caravan', 'detached')"
)

# Use st_read to read in road data, save as variable roads
roads <-st_read(here::here("data", "gis_osm_roads_free_1.gpkg"), query = "SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'")

# Use rast from the terra package to read in tile h08v05 date 02/07/21, save as variable tile_8_5_07
tile_8_5_07 <- read_stars(here::here("data", "VNP46A1", "VNP46A1.A2021038.h08v05.001.2021039064328.tif"))


# Use rast from the terra package to read in tile h08v06 date 02/07/21, save as variable tile_8_6_07
tile_8_6_07 <- read_stars(here::here("data", "VNP46A1", "VNP46A1.A2021038.h08v06.001.2021039064329.tif"))

# Use rast from the terra package to read in tile h08v05 date 02/16/21, save as variable tile_8_5_16
tile_8_5_16 <- read_stars(here::here("data", "VNP46A1", "VNP46A1.A2021047.h08v05.001.2021048091106.tif"))

# Use rast from the terra package to read in tile h08v06 date 02/16/21, save as variable tile_8_6_16
tile_8_6_16 <- read_stars(here::here("data", "VNP46A1", "VNP46A1.A2021047.h08v06.001.2021048091105.tif"))

# Use st_read to read in income data
income <- st_read(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"), layer = "X19_INCOME")

# Use st_read to read in road data, save as variable 
texas_cens <- st_read(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"), layer = "ACS_2019_5YR_TRACT_48_TEXAS")

# Read in ejscreen data
ejscreen <- st_read(here::here("data", "ejscreen", "EJSCREEN_2023_BG_StatePct_with_AS_CNMI_GU_VI.gdb"), quiet = TRUE)

```

```{r, warning=TRUE, message=TRUE}
roads <- st_transform(roads, crs = 3083)
building <- st_transform(building, crs = 3083)

```

#### Create background map 
```{r}
# Use filter to filter for Harris County 
houstin <- ejscreen %>% 
  filter((STATE_NAME == "Texas") & (CNTY_NAME %in% c("Harris County", "Liberty County", "Austin County", "Waller County", "Montgomery County", "Chambers County", "Fort Bend County", "Galveston County", "Brazoria County", "Washington County", "Grimes County", "Burleson County", "Brazos County", "San Jacinto County", "Austin County", "Colorado County", "Matagorda County", "Wharton County", "Jackson County", "Polk County", "Walker County", "Hardin County", "Jefferson County", "Tyler County")))

```


#### Combine tiles for each day, spatially subset the blackout mask to the Houston area as defined by the following coordinates:
(-96.5, 29), (-96.5, 30.5), (-94.5, 30.5), (-94.5, 29)
```{r, fig.width=10, fig.height=8}
# Merge tiles to make one frame 
tile_merge_07 <- st_mosaic(tile_8_5_07, tile_8_6_07)
tile_merge_16 <- st_mosaic(tile_8_5_16, tile_8_6_16)

# Define the desired bounding box for Houston
houston_bbox <- st_bbox(c(xmin = -96.5, xmax = -94.5, ymin = 29, ymax = 30.5), crs = st_crs(tile_merge_07))

# Create a bounding box as an sf object
houston_sf <- st_as_sfc(houston_bbox) %>%
  st_transform(st_crs(tile_merge_07))

# Clip the raster using the bounding box
tile_merge_07_clip <- st_crop(tile_merge_07, houston_sf)
tile_merge_16_clip <- st_crop(tile_merge_16, houston_sf)

# make a copy of each and save them to new variables. It is important that I keep values less than 200 for when I make a difference mask 
tile_merge_07_clip_copy <- tile_merge_07_clip
tile_merge_16_clip_copy <- tile_merge_16_clip 

# Set values less than 200 nW cm² sr⁻¹ to NA for mapping on top of ejscreen data. This excludes the backgroud from covering the ejscreen data, save as new variable. Note: I am not sure of the minimum light detected for the background. This number came from trial and error
tile_merge_07_clip_copy[tile_merge_07_clip_copy <= 50] <- NA
tile_merge_16_clip_copy[tile_merge_16_clip_copy <= 50] <- NA

# Plot both days to compare. This helps understand what the difference mask should look like 
hou_map_07 <- tm_shape(houstin, 
         bbox = tile_merge_07_clip) + 
  tm_polygons(fill = "#000731",
              col = "#707483",
              lwd = .3) +
tm_shape(tile_merge_07_clip_copy) + 
  tm_raster(palette = c("#bea878", "#fffbf4"),
            breaks =c(51, 100, 200, 300, 500, 1000, 2000, 4000, 6000, 8000, Inf)) + 
  tm_layout(bg.color = "#010224",
            legend.show = FALSE)

hou_map_16 <- tm_shape(houstin, 
         bbox = tile_merge_16_clip) + 
  tm_polygons(fill = "#000731",
              col = "#707483",
              lwd = .3) +
tm_shape(tile_merge_16_clip_copy) + 
  tm_raster(palette = c("#bea878", "#fffbf4"),
            breaks =c(51, 100, 200, 300, 500, 1000, 2000, 4000, 6000, 8000, Inf)) + 
  tm_layout(bg.color = "#010224",
            legend.show = FALSE)

tmap_arrange(hou_map_07, hou_map_16, ncol = 2, asp = 1)
```

#### find the change in night lights intensity (presumably) caused by the storm
```{r, fig.width=10, fig.height=8}
# Subtract tile day 16 from tile day 7 to created difference raster mask 
diff_rast_mask <- (tile_merge_07_clip - tile_merge_16_clip)
```

#### reclassify the difference raster, assuming that any location that experienced a drop of more than 200 nW cm-2sr-1 experienced a blackout,
assign NA to all locations that experienced a drop of less than 200 nW cm-2sr-1 change, vectorize the blackout mask
```{r, fig.width=10, fig.height=8}
# Assign NA to locations with a drop of less than 200 nW cm² sr⁻¹ 
diff_rast_mask[diff_rast_mask <= 200] <- NA 

# Vectorize blackout mask with as.polygons and st_as_sf to make it vector data instead of raster
diff_poly_mask <- as.polygons(rast(diff_rast_mask)) %>% 
  st_as_sf() %>% 
  st_transform(crs = 3083)
```
 
#### Re-project the cropped blackout dataset to EPSG:3083 (NAD83 / Texas Centric Albers Equal Area)


#### Plot blackout map 
```{r, fig.width=10, fig.height=8}
# Map the blackout data
blackout_map <- tm_shape(houstin, 
         bbox = diff_rast_mask) + 
  tm_polygons(fill = "seashell1",
              col = "grey80") + 
  tm_shape(diff_rast_mask) +
  tm_polygons(fill = "brown", 
              alpha = .7,
              border.col = NA) + 
  tm_layout(bg.color = "#E0FFFF") + 
  tm_title(text = "Blackout Areas Houston, TX",
           fontfamily = "fantasy",
           fontface = "bold",
           position = c("left", "top"))

print(blackout_map)
```

## Exclude highways from the cropped blackout mask

#### Identify areas within 200m of all highways
```{r}
roads_200 <- st_buffer(roads, dist = 200) %>% 
  st_union() %>% 
  st_transform(crs = 3083) %>% 
  st_make_valid()
  
roads_200 <- st_as_sf(roads_200)

black_map_no_roads <- st_difference(diff_poly_mask, roads_200)

tm_shape(black_map_no_roads) +
  tm_polygons()


```


#### Identify homes likely impacted by blackouts

```{r}
class(building)

tm_shape(building) + 
  tm_polygons()

# Find out where they intersect
blkout_home <- st_intersects(black_map_no_roads, building)

# Unlist the list of homes 
blkout_index <- blkout_home %>%
  unlist() %>%
  unique()

# Subset the buildings data frame to get only the affected buildings
affected_buildings <- building[blkout_index, ]

# View the affected buildings
tm_shape(affected_buildings) + 
  tm_polygons()


```
#### Select Median Income
```{r}
median_income <- income %>%
  select(GEOID, B19013e1)

# Join income with the geo layer
income_geo <- left_join(texas_cens, median_income, join_by(GEOID_Data == GEOID))
```



